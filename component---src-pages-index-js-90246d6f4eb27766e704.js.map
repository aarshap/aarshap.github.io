{"version":3,"sources":["webpack:///./src/components/SiteHero/styled.js","webpack:///./src/components/SiteHero/index.js","webpack:///./src/components/WorkCard/styled.js","webpack:///./src/components/WorkCard/index.js","webpack:///./src/components/Index/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Linebreaker/styled.js","webpack:///./src/components/Linebreaker/index.js","webpack:///./src/components/Card/styled.js","webpack:///./src/components/Card/index.js","webpack:///./src/components/SpireText/index.js","webpack:///./src/components/InlineDivider/styled.js","webpack:///./src/components/InlineDivider/index.js","webpack:///./src/components/Button/styled.js","webpack:///./src/components/Button/index.js"],"names":["Bio","styled","div","Blog","data","useStaticQuery","Container","isFirst","showLine","Grid","delay","Linebreaker","alignItems","Card","slug","allMdx","edges","node","fields","meta","primary","title","frontmatter","dek","cta","SpireText","to","Button","ImageWrapper","motion","props","theme","background","normal","ImageCell","ContentCell","Wrapper","useInView","rootMargin","triggerOnce","ref","imageVariant","initial","width","visible","transition","duration","ease","type","exit","dateStart","dateEnd","description","animate","variants","Image","src","image","alt","imageAlt","objectPosition","imagePosition","useContext","NavContext","updatePageNavScheme","updateVisibleNavScheme","useEffect","isDesktop","useMediaQuery","SEO","SiteHero","isLast","work","map","WorkCard","key","id","cardImage","cardImagePosition","blog","date","secondary","category","photography","Index","children","text","Meta","h6","Title","h3","Description","p","InlineDivider","charArray","split","word","ParentAnimation","start","staggerChildren","end","ChildAnimation","y","ChildTransition","repeat","Infinity","repeatType","index","span","style","whiteSpace","character","display","length","Divider","invertColor","line","inverted","button","border","hover"],"mappings":"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","file":"component---src-pages-index-js-90246d6f4eb27766e704.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const Bio = styled.div`\r\n    margin-bottom: var(--su);\r\n\r\n    p {\r\n        margin-bottom: 1em;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n`\r\n\r\nexport const Blog = styled.div`\r\n    margin-bottom: var(--su);\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Fade } from \"../Animations\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { Link } from \"gatsby\"\r\nimport Button from \"../Button\"\r\nimport Card from \"../Card\"\r\nimport Container from \"../Container\"\r\nimport Grid from \"../Grid\"\r\nimport Linebreaker from \"../Linebreaker\"\r\nimport SpireText from \"../SpireText\"\r\n\r\nexport default () => {\r\n\r\n    // Query for latest blog post\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        allMdx(\r\n            limit: 1,\r\n            sort: {fields: frontmatter___date, order: DESC},\r\n            filter: { fileAbsolutePath: {regex: \"/(blog)/\"} }\r\n            ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        dek\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }            \r\n    }\r\n`)\r\n\r\n    return (\r\n        <Container isFirst={true} showLine={true}>\r\n            <Grid>\r\n                <div>\r\n                    <Fade delay={0.5}>\r\n                        <p><b>Aaron Shapiro</b> is a product designer, technologist, balcony gardener, amateur bartender, leftist, and your next best friend in Brooklyn, New&nbsp;York.</p>\r\n                    </Fade>\r\n                </div>\r\n            </Grid>\r\n            <Linebreaker>\r\n                <h1>\r\n                    <Fade>A good guy who makes good websites.</Fade>\r\n                </h1>\r\n            </Linebreaker>\r\n            <Grid alignItems=\"end\">\r\n                <div>\r\n                    <Fade delay={0.5}>\r\n                        <Styled.Blog>\r\n                            <Card\r\n                                slug={data.allMdx.edges[0].node.fields.slug}\r\n                                meta={{\r\n                                    primary: \"Latest blog\"\r\n                                }}\r\n                                title={data.allMdx.edges[0].node.frontmatter.title}\r\n                                dek={data.allMdx.edges[0].node.frontmatter.dek}\r\n                                cta=\"Read\"\r\n                            />\r\n                        </Styled.Blog>\r\n                    </Fade>\r\n                </div>\r\n                <div>\r\n                    <Fade delay={0.5}>\r\n                        <Styled.Bio>\r\n                            <p>I’m a cross-functional designer with over a decade of experience designing and building tools for journalists, artists, and makers. Creative people make me <SpireText>happy</SpireText>.</p>\r\n                            <p>I most recently led the product design team at <Link to=\"/work/vice\">VICE</Link>. It was a lot of&nbsp;fun.</p>\r\n                            <div>\r\n                                <Button to=\"/info\">More about me</Button>\r\n                            </div>\r\n                        </Styled.Bio>\r\n                    </Fade>\r\n                </div>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { motion } from \"framer-motion\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const ImageWrapper = styled(motion.div)`\r\n    background-color: ${props => props.theme.background.normal};\r\n    overflow: hidden;\r\n    position: relative;\r\n    user-select: none;\r\n    z-index: 2;\r\n\r\n    > div {\r\n        height: calc(100vw * .56);\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n\r\n        > div {\r\n            height: 100vh;\r\n            left: 50%;\r\n            min-height: 1280px;\r\n            position: absolute;\r\n            transform: translateX(-50%);\r\n        }\r\n\r\n    }\r\n\r\n`\r\n\r\nexport const ImageCell = styled.div`\r\n    grid-row: 1;\r\n    position: relative;\r\n`\r\n\r\nexport const ContentCell = styled.div`\r\n    grid-row: 1;\r\n\r\n    margin-top: var(--su);\r\n\r\n    @media (min-width: 800px) {\r\n        margin-top: 0;\r\n    }\r\n\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color: ${props => props.theme.background.normal};\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: var(--su);\r\n\r\n        &:last-child {\r\n            margin-bottom: 0;\r\n        }    \r\n    \r\n        &:nth-child(odd) {\r\n\r\n            ${ImageCell} {\r\n                grid-column: 2;\r\n                margin-left: calc(var(--su) * -1);\r\n            }\r\n\r\n            ${ImageWrapper} {\r\n\r\n                @media (min-width: 800px) {\r\n                    border-radius: 0 160px 160px 0;\r\n                    margin-right: auto;\r\n                }\r\n\r\n                @media (min-width: 1200px) {\r\n                    border-radius: 0 240px 240px 0;\r\n                }\r\n\r\n                @media (min-width: 1600px) {\r\n                    border-radius: 0 320px 320px 0;\r\n                }\r\n\r\n                @media (min-width: 2560px) {\r\n                    border-radius: 0 480px 480px 0;\r\n                }\r\n\r\n            }\r\n\r\n            ${ContentCell} {\r\n                grid-column: 1;\r\n            }\r\n\r\n        }\r\n\r\n        &:nth-child(even) {\r\n\r\n            ${ImageCell} {\r\n                grid-column: 1;\r\n                margin-right: calc(var(--su) * -1);\r\n            }\r\n\r\n            ${ImageWrapper} {\r\n\r\n                @media (min-width: 800px) {\r\n                    border-radius: 160px 0 0 160px;\r\n                    margin-left: auto;\r\n                }\r\n                \r\n                @media (min-width: 1200px) {\r\n                    border-radius: 240px 0 0 240px;\r\n                }\r\n\r\n                @media (min-width: 1600px) {\r\n                    border-radius: 320px 0 0 320px;\r\n                }\r\n\r\n                @media (min-width: 2560px) {\r\n                    border-radius: 480px 0 0 480px;\r\n                }\r\n                \r\n            }\r\n\r\n            ${ContentCell} {\r\n                grid-column: 2;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n`\r\n","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Fade } from \"../Animations\"\r\nimport { useInView } from \"react-intersection-observer\"\r\nimport Card from \"../Card\"\r\nimport Grid from \"../Grid\"\r\nimport Image from \"../Image\"\r\nimport Linebreaker from \"../Linebreaker\"\r\n\r\nexport default (props) => {\r\n\r\n    // Intersection Observer\r\n\r\n    const [ref, inView] = useInView({\r\n        rootMargin: \"-160px 0px\",\r\n        triggerOnce: true,\r\n    })\r\n\r\n    // Animations\r\n\r\n    const imageVariant = {\r\n        initial: {\r\n            width: 0,\r\n        },\r\n        visible: {\r\n            width: inView ? \"auto\" : 0,\r\n            transition: {\r\n                duration: 0.75,\r\n                ease: [0.85, 0, 0.35, 1],\r\n                type: \"tween\"\r\n            },\r\n        },\r\n        exit: {\r\n            width: 0,\r\n            transition: {\r\n                duration: 0.5,\r\n                ease: [0.85, 0, 0.35, 1],\r\n                type: \"tween\"\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Styled.Wrapper>\r\n            <Linebreaker>\r\n                <Grid alignItems=\"center\">\r\n                    <Styled.ContentCell>\r\n                        <Fade>\r\n                            <Card\r\n                                meta={{\r\n                                    primary: props.dateStart === props.dateEnd ? props.dateEnd : props.dateStart + \" - \" + props.dateEnd\r\n                                }}\r\n                                title={props.title}\r\n                                dek={props.description}\r\n                                cta={props.cta}\r\n                                slug={props.slug}\r\n                            />\r\n                        </Fade>\r\n                    </Styled.ContentCell>\r\n                    <Styled.ImageCell>\r\n                        <Styled.ImageWrapper\r\n                            ref={ref}\r\n                            initial=\"initial\"\r\n                            animate=\"visible\"\r\n                            exit=\"exit\"\r\n                            variants={imageVariant}\r\n                        >\r\n                            <Image src={props.image} alt={props.imageAlt} objectPosition={props.imagePosition} />\r\n                        </Styled.ImageWrapper>\r\n                    </Styled.ImageCell>\r\n                </Grid>\r\n            </Linebreaker>\r\n        </Styled.Wrapper>\r\n    )\r\n}","import React, { useContext, useEffect } from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { NavContext } from \"../../contexts/NavContext\"\r\nimport { Fade } from \"../Animations\"\r\nimport { useMediaQuery } from '@react-hook/media-query'\r\nimport Container from \"../Container\"\r\nimport Card from \"../Card\"\r\nimport Grid from \"../Grid\"\r\nimport Linebreaker from \"../Linebreaker\"\r\nimport SEO from \"../SEO\"\r\nimport SiteHero from \"../SiteHero\"\r\nimport WorkCard from \"../WorkCard\"\r\n\r\nexport default () => {\r\n\r\n    // Setting nav state\r\n\r\n    const { updatePageNavScheme, updateVisibleNavScheme } = useContext(NavContext)\r\n\r\n    useEffect(() => {\r\n        updatePageNavScheme(false, false)\r\n        updateVisibleNavScheme(false, false)\r\n    }, [updatePageNavScheme, updateVisibleNavScheme])\r\n\r\n    // Media query hook used to adjust copy\r\n\r\n    const isDesktop = useMediaQuery(\"(min-width: 800px)\")\r\n\r\n    // Data\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        work: allMdx(\r\n            sort: { fields: [frontmatter___key], order: ASC },\r\n            filter: { fileAbsolutePath: {regex: \"/(work)/\"  }}\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        dek\r\n                        dateStart\r\n                        dateEnd\r\n                        cardImage\r\n                        cardImagePosition\r\n                        key\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        blog: allMdx(\r\n            sort: { fields: [frontmatter___date], order: DESC },\r\n            filter: { fileAbsolutePath: {regex: \"/(blog)/\"} }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"YYYY\")\r\n                        category\r\n                        dek\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        photography: allMdx(\r\n            sort: { fields: [frontmatter___date], order: DESC },\r\n            filter: { fileAbsolutePath: {regex: \"/(photography)/\"  }}\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"YYYY\")\r\n                        dek\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`)\r\n\r\n    return (\r\n        <>\r\n            <SEO\r\n                title=\"Home\"\r\n            />\r\n            <SiteHero />\r\n            <Container isLast={true} showLine={true}>\r\n                {data.work.edges.map(({ node }) => (\r\n                    <WorkCard\r\n                        key={node.id}\r\n                        title={node.frontmatter.title}\r\n                        image={node.frontmatter.cardImage}\r\n                        imageAlt={`${node.frontmatter.title} image`}\r\n                        imagePosition={node.frontmatter.cardImagePosition}\r\n                        dateStart={node.frontmatter.dateStart}\r\n                        dateEnd={node.frontmatter.dateEnd}\r\n                        description={node.frontmatter.dek}\r\n                        slug={node.fields.slug}\r\n                        cta=\"Read\"\r\n                    />\r\n                ))}\r\n                <Linebreaker>\r\n                    <h2>\r\n                        <Fade>Writing.</Fade>\r\n                    </h2>\r\n                </Linebreaker>\r\n                <Grid>\r\n                    <div>\r\n                        {data.blog.edges.map(({ node }) => (\r\n                            <Card\r\n                                key={node.id}\r\n                                meta={{\r\n                                    primary: node.frontmatter.date,\r\n                                    secondary: node.frontmatter.category\r\n                                }}\r\n                                slug={node.fields.slug}\r\n                                title={node.frontmatter.title}\r\n                                dek={node.frontmatter.dek}\r\n                                category={node.frontmatter.category}\r\n                                cta=\"Read\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </Grid>\r\n                <Linebreaker>\r\n                    <h2>\r\n                        <Fade>\r\n                            {isDesktop ? \"Photography.\" : \"Photos.\"}\r\n                        </Fade>\r\n                    </h2>\r\n                </Linebreaker>\r\n                <Grid>\r\n                    <div>\r\n                        {data.photography.edges.map(({ node }) => (\r\n                            <Card\r\n                                key={node.id}\r\n                                meta={{\r\n                                    primary: node.frontmatter.date\r\n                                }}\r\n                                slug={node.fields.slug}\r\n                                title={node.frontmatter.title}\r\n                                dek={node.frontmatter.dek}\r\n                                cta=\"Look\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Index from \"../components/Index\"\r\n\r\nexport default () => {\r\n    return (\r\n        <Index />\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: var(--su) 0;\r\n\r\n    @media (min-width: 800px) {\r\n        background-color: inherit; // Requires parent with a background color\r\n        color: inherit;\r\n        position: relative;\r\n        z-index: 1;\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Wrapper>\r\n            {props.children}\r\n        </Styled.Wrapper>\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    color: ${props => props.theme.text.normal };\r\n    margin-bottom: calc(var(--su) * 2);\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: var(--su);\r\n    }\r\n\r\n`\r\n\r\nexport const Meta = styled.h6`\r\n    margin-bottom: 20px;\r\n`\r\n\r\nexport const Title = styled.h3`\r\n    margin-bottom: 12px;\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 16px;\r\n    }\r\n\r\n`\r\n\r\nexport const Description = styled.p`\r\n    margin-bottom: 16px;\r\n\r\n    @media(min-width: 800px) {\r\n        margin-bottom: 20px;\r\n    }\r\n    \r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Fade } from \"../Animations\"\r\nimport { Link } from \"gatsby\"\r\nimport Button from \"../Button\"\r\nimport InlineDivider from \"../InlineDivider\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Wrapper key={props.id}>\r\n            <Fade>\r\n                {props.meta &&\r\n                    <Styled.Meta>\r\n                        {props.meta.primary}\r\n                        {props.meta.secondary &&\r\n                            <span>\r\n                                <InlineDivider />{props.meta.secondary}\r\n                            </span>\r\n                        }\r\n                    </Styled.Meta>\r\n                }\r\n                <Styled.Title>\r\n                    <Link to={props.slug}>{props.title}</Link>\r\n                </Styled.Title>\r\n                <Styled.Description>{props.dek}</Styled.Description>\r\n                <Button to={props.slug}>{props.cta}</Button>\r\n            </Fade>\r\n        </Styled.Wrapper>\r\n    )\r\n}","import React from \"react\"\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport default ({ children }) => {\r\n    const wordArray = children.split(\" \")\r\n    const charArray = wordArray.map(word => (\r\n        word.split(\"\")\r\n    ))\r\n\r\n    const ParentAnimation = {\r\n        start: {\r\n            transition: {\r\n                staggerChildren: 0.2,\r\n            },\r\n        },\r\n        end: {\r\n            transition: {\r\n                staggerChildren: 0.2,\r\n            },\r\n        }\r\n    }\r\n      \r\n    const ChildAnimation = {\r\n        start: {\r\n            y: -2,\r\n        },\r\n        end: {\r\n            y: 2,\r\n        }\r\n    }\r\n\r\n    const ChildTransition = {\r\n        duration: 0.5,\r\n        repeat: Infinity,\r\n        repeatType: \"reverse\",\r\n        ease: \"easeInOut\",\r\n      }\r\n      \r\n      \r\n    return (\r\n        <>\r\n            {charArray.map((word, index) => (\r\n                <>\r\n                    <motion.span key={index} initial=\"start\" animate=\"end\" variants={ParentAnimation} style={{whiteSpace: \"nowrap\"}}>\r\n                        {word.map(character => (\r\n                            <motion.span\r\n                                variants={ChildAnimation}\r\n                                transition={ChildTransition}\r\n                                style={{display: \"inline-block\"}}\r\n                            >\r\n                                {character}\r\n                            </motion.span>\r\n                        ))}\r\n                    </motion.span>\r\n                    {charArray.length !== index + 1 && \" \"}\r\n                </>\r\n            ))}\r\n        </>\r\n    )\r\n\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Divider = styled.span`\r\n    border-bottom: var(--line-width) solid ${props => props.invertColor ? props.theme.line.inverted : props.theme.line.normal };\r\n    display: inline-block;\r\n    margin: 0 8px;\r\n    position: relative;\r\n    top: -0.3em;\r\n    width: 24px;\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Divider invertColor={props.invertColor} />\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    a {\r\n        background: ${props => props.theme.button.background.normal};\r\n        border: var(--line-width) solid ${props => props.theme.button.border.normal};\r\n        border-radius: 2px;\r\n        color: ${props => props.theme.button.text.normal};\r\n        display: inline-block;\r\n        line-height: var(--line-height-tight);\r\n        margin-bottom: 4px;\r\n        padding: 17px 32px 15px;\r\n        position: relative;\r\n        text-decoration: none;\r\n        user-select: none;\r\n\r\n        &:hover { \r\n            background: ${props => props.theme.button.background.hover};\r\n            border: var(--line-width) solid ${props => props.theme.button.border.hover};\r\n            color: ${props => props.theme.button.text.hover};    \r\n        }\r\n    \r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Wrapper>\r\n            <h6>\r\n                <Link to={props.to}>\r\n                    {props.children}\r\n                </Link>\r\n            </h6>\r\n        </Styled.Wrapper>\r\n    )\r\n}"],"sourceRoot":""}