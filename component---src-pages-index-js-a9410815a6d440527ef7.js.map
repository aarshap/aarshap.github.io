{"version":3,"sources":["webpack:///./src/components/MiniCard/styled.js","webpack:///./src/components/MiniCard/index.js","webpack:///./src/components/SiteHero/styled.js","webpack:///./src/components/SiteHero/index.js","webpack:///./src/components/WorkCard/styled.js","webpack:///./src/components/WorkCard/index.js","webpack:///./src/components/Index/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Linebreaker/styled.js","webpack:///./src/components/Linebreaker/index.js","webpack:///./src/components/InlineDivider/styled.js","webpack:///./src/components/InlineDivider/index.js","webpack:///./src/components/Button/styled.js","webpack:///./src/components/Button/index.js"],"names":["Wrapper","styled","div","props","theme","text","normal","Meta","h6","Title","h3","link","Description","p","key","id","meta","primary","secondary","InlineDivider","to","slug","title","dek","Button","cta","Name","span","Bio","data","useStaticQuery","Container","hasVerticalLine","animateLine","isFirst","Grid","delay","Linebreaker","alignItems","MiniCard","allMdx","edges","node","fields","frontmatter","ImageWrapper","motion","background","ImageCell","ContentCell","WorkCard","useInView","rootMargin","triggerOnce","ref","ImageAnimation","initial","width","visible","transition","duration","ease","type","exit","dateStart","dateEnd","description","color","buttonColor","animate","variants","Image","src","image","alt","imageAlt","objectPosition","imagePosition","useContext","NavContext","updatePageNavScheme","updateVisibleNavScheme","useEffect","SEO","SiteHero","work","map","cardImage","cardImagePosition","blog","date","category","photography","Index","children","Divider","invertColor","line","inverted","hover","linkParentAnimation","completed","linkChildAnimation","x","whileHover","svg","height","viewBox","fill","xmlns","d"],"mappings":"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","file":"component---src-pages-index-js-a9410815a6d440527ef7.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    color: ${props => props.theme.text.normal };\r\n    margin-bottom: calc(var(--su) * 2);\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: var(--su);\r\n    }\r\n\r\n`\r\n\r\nexport const Meta = styled.h6`\r\n    margin-bottom: 16px;\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 24px;\r\n    }\r\n\r\n`\r\n\r\nexport const Title = styled.h3`\r\n    margin-bottom: 8px;\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 16px;\r\n    }\r\n\r\n    a,\r\n    a:visited {\r\n        color: ${props => props.theme.text.normal};\r\n        text-decoration: none;\r\n\r\n        &:hover {\r\n            color: ${props => props.theme.link.normal };\r\n        }\r\n\r\n    }\r\n\r\n`\r\n\r\nexport const Description = styled.p`\r\n    margin-bottom: 8px;\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 16px;\r\n    }\r\n\r\n    @media(min-width: 800px) {\r\n        margin-bottom: 24px;\r\n    }\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Fade } from \"../Animations\"\r\nimport { Link } from \"gatsby\"\r\nimport Button from \"../Button\"\r\nimport InlineDivider from \"../InlineDivider\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Wrapper key={props.id}>\r\n            <Fade>\r\n                {props.meta &&\r\n                    <Styled.Meta>\r\n                        {props.meta.primary}\r\n                        {props.meta.secondary &&\r\n                            <span>\r\n                                <InlineDivider />{props.meta.secondary}\r\n                            </span>\r\n                        }\r\n                    </Styled.Meta>\r\n                }\r\n                <Styled.Title>\r\n                    <Link to={props.slug}>{props.title}</Link>\r\n                </Styled.Title>\r\n                <Styled.Description>{props.dek}</Styled.Description>\r\n                <Button to={props.slug}>{props.cta}</Button>\r\n            </Fade>\r\n        </Styled.Wrapper>\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Name = styled.span`\r\n    font-family: var(--family-heading);\r\n    font-weight: 800;\r\n    line-height: 1.4; // Specific number to match the paragraph\r\n`\r\n\r\nexport const Bio = styled.div`\r\n    margin-bottom: var(--su);\r\n\r\n    p {\r\n        margin-bottom: 1em;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Fade, SlideUp } from \"../Animations\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport Button from \"../Button\"\r\nimport Container from \"../Container\"\r\nimport Grid from \"../Grid\"\r\nimport Linebreaker from \"../Linebreaker\"\r\nimport MiniCard from \"../MiniCard\"\r\n\r\nexport default () => {\r\n\r\n    // Query for latest blog post\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        allMdx(\r\n            limit: 1,\r\n            sort: {fields: frontmatter___date, order: DESC},\r\n            filter: { fileAbsolutePath: {regex: \"/(blog)/\"} }\r\n            ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        dek\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }            \r\n    }\r\n`)\r\n\r\n    return (\r\n        <Container hasVerticalLine={true} animateLine={true} isFirst={true}>\r\n            <Grid>\r\n                <div>\r\n                    <Fade delay={0.5}>\r\n                        <p><Styled.Name>Aaron Shapiro</Styled.Name> is a product designer, technologist, balcony gardener, amateur bartender, leftist, and your next best friend in Brooklyn, New&nbsp;York.</p>\r\n                    </Fade>\r\n                </div>\r\n            </Grid>\r\n            <Linebreaker>\r\n                <h1>\r\n                    <SlideUp>Let's make online.</SlideUp>\r\n                </h1>\r\n            </Linebreaker>\r\n            <Grid alignItems=\"end\">\r\n                <div>\r\n                    <Fade delay={0.5}>\r\n                        <MiniCard\r\n                            slug={data.allMdx.edges[0].node.fields.slug}\r\n                            meta={{\r\n                                primary: \"Latest blog\"\r\n                            }}\r\n                            title={data.allMdx.edges[0].node.frontmatter.title}\r\n                            dek={data.allMdx.edges[0].node.frontmatter.dek}\r\n                            cta=\"Read\"\r\n                        />\r\n                    </Fade>\r\n                </div>\r\n                <div>\r\n                    <Fade delay={0.5}>\r\n                        <Styled.Bio>\r\n                            <p>I’m a cross-functional designer with over a decade of experience designing and building tools for journalists, artists, and makers. Creative people make me&nbsp;happy.</p>\r\n                            <p>I most recently led the product design team at VICE. It was a lot of&nbsp;fun.</p>\r\n                            <div>\r\n                                <Button to=\"/info\">More about me</Button>\r\n                            </div>\r\n                        </Styled.Bio>\r\n                    </Fade>\r\n                </div>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { motion } from \"framer-motion\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const ImageWrapper = styled(motion.div)`\r\n    background-color: ${props => props.theme.background.normal};\r\n    position: relative;\r\n    z-index: 2;\r\n\r\n    > div {\r\n        height: calc(100vw * .56);\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n\r\n        > div {\r\n            height: 100vh;\r\n            left: 50%;\r\n            min-height: 1280px;\r\n            position: absolute;\r\n            transform: translateX(-50%);\r\n        }\r\n\r\n    }\r\n\r\n`\r\n\r\nexport const ImageCell = styled.div`\r\n    grid-row: 1;\r\n    position: relative;\r\n`\r\n\r\nexport const ContentCell = styled.div`\r\n    grid-row: 1;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color: transparent;\r\n    margin-bottom: calc(var(--su) * -2);\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 0;\r\n    \r\n        &:nth-child(odd) {\r\n\r\n            ${ImageCell} {\r\n                grid-column: 2;\r\n                margin-left: calc(var(--su) * -1);\r\n            }\r\n\r\n            ${ImageWrapper} {\r\n\r\n                @media (min-width: 800px) {\r\n                    margin-right: auto;\r\n                }    \r\n\r\n            }\r\n\r\n            ${ContentCell} {\r\n                grid-column: 1;\r\n            }\r\n\r\n        }\r\n\r\n        &:nth-child(even) {\r\n\r\n            ${ImageCell} {\r\n                grid-column: 1;\r\n                margin-right: calc(var(--su) * -1);\r\n            }\r\n\r\n            ${ImageWrapper} {\r\n\r\n                @media (min-width: 800px) {\r\n                    margin-left: auto;\r\n                }    \r\n                \r\n            }\r\n\r\n            ${ContentCell} {\r\n                grid-column: 2;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n`\r\n\r\nexport const Meta = styled.h6`\r\n    margin-bottom: 16px;\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 24px;\r\n    }\r\n\r\n`\r\n\r\nexport const Title = styled.h3`\r\n    margin-bottom: 8px;\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 16px;\r\n    }\r\n\r\n    a,\r\n    a:visited {\r\n        color: ${props => props.theme.text.normal };\r\n        text-decoration: none;\r\n\r\n        &:hover {\r\n            color: ${props => props.theme.link.normal };\r\n        }\r\n\r\n    }\r\n\r\n`\r\n\r\nexport const Description = styled.p`\r\n    margin-bottom: 8px;\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 24px;\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Fade } from \"../Animations\"\r\nimport { useInView } from \"react-intersection-observer\"\r\nimport Button from \"../Button\"\r\nimport Container from \"../Container\"\r\nimport Grid from \"../Grid\"\r\nimport Image from \"../Image\"\r\n\r\nconst WorkCard = (props) => {\r\n\r\n    // Intersection Observer\r\n\r\n    const [ref, inView] = useInView({\r\n        rootMargin: \"-160px 0px\",\r\n        triggerOnce: true,\r\n    })\r\n\r\n    // Animations\r\n\r\n    const ImageAnimation = {\r\n        initial: {\r\n            width: 0,\r\n        },\r\n        visible: {\r\n            width: inView ? \"auto\" : 0,\r\n            transition: {\r\n                duration: 0.75,\r\n                ease: [0.85, 0, 0.35, 1],\r\n                type: \"tween\"\r\n            },\r\n        },\r\n        exit: {\r\n            width: 0,\r\n            transition: {\r\n                duration: 0.75,\r\n                ease: [0.85, 0, 0.35, 1],\r\n                type: \"tween\"\r\n            },\r\n        },\r\n    }\r\n\r\n\r\n    return (\r\n        <Styled.Wrapper>\r\n            <Container hasVerticalLine={false}>\r\n                <Grid alignItems=\"center\">\r\n                    <Styled.ContentCell>\r\n                        <Fade>\r\n                            <Styled.Meta>{props.dateStart === props.dateEnd ? props.dateEnd : `${props.dateStart} - ${props.dateEnd}`}</Styled.Meta>\r\n                            <Styled.Title>{props.title}</Styled.Title>\r\n                            <Styled.Description>{props.description}</Styled.Description>\r\n                            <Button to={props.slug} color={props.buttonColor}>{props.cta}</Button>\r\n                        </Fade>\r\n                    </Styled.ContentCell>\r\n                    <Styled.ImageCell>\r\n                        <Styled.ImageWrapper\r\n                            ref={ref}\r\n                            initial=\"initial\"\r\n                            animate=\"visible\"\r\n                            exit=\"exit\"\r\n                            variants={ImageAnimation}\r\n                        >\r\n                            <Image src={props.image} alt={props.imageAlt} objectPosition={props.imagePosition} />\r\n                        </Styled.ImageWrapper>\r\n                    </Styled.ImageCell>\r\n                </Grid>\r\n            </Container>\r\n        </Styled.Wrapper>\r\n    )\r\n}\r\n\r\nexport default WorkCard","import React, { useContext, useEffect } from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { NavContext } from \"../../contexts/NavContext\"\r\nimport { SlideUp } from \"../Animations\"\r\nimport Container from \"../Container\"\r\nimport Grid from \"../Grid\"\r\nimport Linebreaker from \"../Linebreaker\"\r\nimport MiniCard from \"../MiniCard\"\r\nimport SEO from \"../SEO\"\r\nimport SiteHero from \"../SiteHero\"\r\nimport WorkCard from \"../WorkCard\"\r\n\r\nexport default () => {\r\n\r\n    // Setting nav state\r\n\r\n    const { updatePageNavScheme, updateVisibleNavScheme } = useContext(NavContext)\r\n\r\n    useEffect(() => {\r\n        updatePageNavScheme(false, false)\r\n        updateVisibleNavScheme(false, false)\r\n    }, [updatePageNavScheme, updateVisibleNavScheme])\r\n\r\n    // Data\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        work: allMdx(\r\n            sort: { fields: [frontmatter___key], order: ASC },\r\n            filter: { fileAbsolutePath: {regex: \"/(work)/\"  }}\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        dek\r\n                        dateStart\r\n                        dateEnd\r\n                        cardImage\r\n                        cardImagePosition\r\n                        key\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        blog: allMdx(\r\n            sort: { fields: [frontmatter___date], order: DESC },\r\n            filter: { fileAbsolutePath: {regex: \"/(blog)/\"} }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"YYYY\")\r\n                        category\r\n                        dek\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        photography: allMdx(\r\n            sort: { fields: [frontmatter___date], order: DESC },\r\n            filter: { fileAbsolutePath: {regex: \"/(photography)/\"  }}\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"YYYY\")\r\n                        dek\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`)\r\n\r\n    return (\r\n        <>\r\n            <SEO\r\n                title=\"Home\"\r\n            />\r\n            <SiteHero />\r\n            {data.work.edges.map(({ node }) => (\r\n                <WorkCard\r\n                    key={node.id}\r\n                    title={node.frontmatter.title}\r\n                    image={node.frontmatter.cardImage}\r\n                    imageAlt={`${node.frontmatter.title} image`}\r\n                    imagePosition={node.frontmatter.cardImagePosition}\r\n                    dateStart={node.frontmatter.dateStart}\r\n                    dateEnd={node.frontmatter.dateEnd}\r\n                    description={node.frontmatter.dek}\r\n                    slug={node.fields.slug}\r\n                    cta=\"Read\"\r\n                />\r\n            ))}\r\n            <Container hasVerticalLine={true}>\r\n                <Linebreaker>\r\n                    <h1>\r\n                        <SlideUp>Writing.</SlideUp>\r\n                    </h1>\r\n                </Linebreaker>\r\n                <Grid>\r\n                    <div>\r\n                        {data.blog.edges.map(({ node }) => (\r\n                            <MiniCard\r\n                                key={node.id}\r\n                                meta={{\r\n                                    primary: node.frontmatter.date,\r\n                                    secondary: node.frontmatter.category\r\n                                }}\r\n                                slug={node.fields.slug}\r\n                                title={node.frontmatter.title}\r\n                                dek={node.frontmatter.dek}\r\n                                category={node.frontmatter.category}\r\n                                cta=\"Read\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </Grid>\r\n                <Linebreaker>\r\n                    <h1>\r\n                        <SlideUp>Photography.</SlideUp>\r\n                    </h1>\r\n                </Linebreaker>\r\n                <Grid>\r\n                    <div>\r\n                        {data.photography.edges.map(({ node }) => (\r\n                            <MiniCard\r\n                                key={node.id}\r\n                                meta={{\r\n                                    primary: node.frontmatter.date\r\n                                }}\r\n                                slug={node.fields.slug}\r\n                                title={node.frontmatter.title}\r\n                                dek={node.frontmatter.dek}\r\n                                cta=\"Look\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Index from \"../components/Index\"\r\n\r\nexport default () => {\r\n    return (\r\n        <Index />\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    margin: var(--su) 0;\r\n    padding: var(--su) 0;\r\n\r\n    &:first-child {\r\n        margin-top: 0;\r\n    }\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        background-color: inherit; // Requires parent with a background color\r\n        color: inherit;\r\n        margin: 0;\r\n        position: relative;\r\n        z-index: 1;\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Wrapper>\r\n            {props.children}\r\n        </Styled.Wrapper>\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Divider = styled.span`\r\n    border-bottom: 1px solid ${props => props.invertColor ? props.theme.line.inverted : props.theme.line.normal };\r\n    display: inline-block;\r\n    margin: 0 8px;\r\n    position: relative;\r\n    top: -0.3em;\r\n    width: 16px;\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Divider invertColor={props.invertColor} />\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    a {\r\n        color: ${props => props.theme.link.normal };\r\n        display: inline-block;\r\n        font-family: var(--family-heading);\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        line-height: var(--line-height-tight);\r\n        margin: -8px;\r\n        padding: 8px;\r\n        position: relative;\r\n        text-decoration: none;\r\n\r\n        @media (min-width: 800px) {\r\n            font-size: 18px;\r\n        }\r\n\r\n        @media (min-width: 2000px) {\r\n            font-size: 20px;\r\n        }\r\n\r\n    \r\n        &:visited {\r\n            color: ${props => props.theme.link.normal };\r\n        }\r\n    \r\n        &:hover {\r\n            color: ${props => props.theme.link.hover };\r\n    \r\n            path {\r\n                stroke: ${props => props.theme.link.hover };\r\n            }\r\n    \r\n        }\r\n    \r\n        svg {\r\n            display: inline;\r\n            fill: none;\r\n            margin-left: 8px;\r\n            position: relative;\r\n            top: 5px;\r\n            width: 12px;\r\n\r\n            @media (min-width: 800px) {\r\n                top: 4px;\r\n                width: 16px;\r\n            }\r\n    \r\n            path {\r\n                stroke: ${props => props.theme.link.normal };\r\n                stroke-width: 3;    \r\n            }\r\n    \r\n        }\r\n\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Link } from \"gatsby\"\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst linkParentAnimation = {\r\n    initial: {},\r\n    completed: {}\r\n}\r\n\r\nconst linkChildAnimation = {\r\n    initial: {\r\n        x: 0\r\n    },\r\n    completed: {\r\n        x: 8,\r\n    }\r\n}\r\n\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Wrapper>\r\n            <Link to={props.to}>\r\n                <motion.div animate=\"initial\" whileHover=\"completed\" initial=\"initial\" variants={linkParentAnimation} >\r\n                    {props.children}\r\n                    <motion.svg variants={linkChildAnimation} width=\"20\" height=\"21\" viewBox=\"0 0 20 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M8.48535 2L16.9706 10.4853L8.48535 18.9706\"/>\r\n                        <path d=\"M1 10.5H17\"/>\r\n                    </motion.svg>\r\n                </motion.div>\r\n            </Link>\r\n        </Styled.Wrapper>\r\n    )\r\n}"],"sourceRoot":""}