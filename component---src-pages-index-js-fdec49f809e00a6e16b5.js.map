{"version":3,"sources":["webpack:///./src/components/SiteHero/styled.js","webpack:///./src/components/SiteHero/index.js","webpack:///./src/components/WorkCard/styled.js","webpack:///./src/components/WorkCard/index.js","webpack:///./src/components/Index/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Linebreaker/styled.js","webpack:///./src/components/Linebreaker/index.js","webpack:///./src/components/Card/styled.js","webpack:///./src/components/Card/index.js","webpack:///./src/components/InlineDivider/styled.js","webpack:///./src/components/InlineDivider/index.js","webpack:///./src/components/Button/styled.js","webpack:///./src/components/Button/index.js"],"names":["Name","styled","span","Bio","div","data","useStaticQuery","Container","hasVerticalLine","animateLine","isFirst","Grid","delay","Linebreaker","alignItems","Card","slug","allMdx","edges","node","fields","meta","primary","title","frontmatter","dek","cta","Button","to","ImageWrapper","motion","props","theme","background","normal","ImageCell","ContentCell","Wrapper","useInView","rootMargin","triggerOnce","ref","imageVariant","initial","width","visible","transition","duration","ease","type","exit","dateStart","dateEnd","description","animate","variants","Image","src","image","alt","imageAlt","objectPosition","imagePosition","useContext","NavContext","updatePageNavScheme","updateVisibleNavScheme","useEffect","isDesktop","useMediaQuery","SEO","SiteHero","work","map","WorkCard","key","id","cardImage","cardImagePosition","blog","date","secondary","category","photography","Index","children","text","Meta","h6","Title","h3","link","Description","p","InlineDivider","Divider","invertColor","line","inverted"],"mappings":"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","file":"component---src-pages-index-js-fdec49f809e00a6e16b5.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const Name = styled.span`\r\n    font-weight: 500;\r\n`\r\n\r\nexport const Bio = styled.div`\r\n    margin-bottom: var(--su);\r\n\r\n    p {\r\n        margin-bottom: 1em;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Fade, SlideUp } from \"../Animations\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport Button from \"../Button\"\r\nimport Container from \"../Container\"\r\nimport Grid from \"../Grid\"\r\nimport Linebreaker from \"../Linebreaker\"\r\nimport Card from \"../Card\"\r\n\r\nexport default () => {\r\n\r\n    // Query for latest blog post\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        allMdx(\r\n            limit: 1,\r\n            sort: {fields: frontmatter___date, order: DESC},\r\n            filter: { fileAbsolutePath: {regex: \"/(blog)/\"} }\r\n            ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        dek\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }            \r\n    }\r\n`)\r\n\r\n    return (\r\n        <Container hasVerticalLine={true} animateLine={true} isFirst={true}>\r\n            <Grid>\r\n                <div>\r\n                    <Fade delay={0.5}>\r\n                        <p><Styled.Name>Aaron Shapiro</Styled.Name> is a product designer, technologist, balcony gardener, amateur bartender, leftist, and your next best friend in Brooklyn, New&nbsp;York.</p>\r\n                    </Fade>\r\n                </div>\r\n            </Grid>\r\n            <Linebreaker>\r\n                <h1>\r\n                    <SlideUp>Let's make online.</SlideUp>\r\n                </h1>\r\n            </Linebreaker>\r\n            <Grid alignItems=\"end\">\r\n                <div>\r\n                    <Fade delay={0.5}>\r\n                        <Card\r\n                            slug={data.allMdx.edges[0].node.fields.slug}\r\n                            meta={{\r\n                                primary: \"Latest blog\"\r\n                            }}\r\n                            title={data.allMdx.edges[0].node.frontmatter.title}\r\n                            dek={data.allMdx.edges[0].node.frontmatter.dek}\r\n                            cta=\"Read\"\r\n                        />\r\n                    </Fade>\r\n                </div>\r\n                <div>\r\n                    <Fade delay={0.5}>\r\n                        <Styled.Bio>\r\n                            <p>Iâ€™m a cross-functional designer with over a decade of experience designing and building tools for journalists, artists, and makers. Creative people make me&nbsp;happy.</p>\r\n                            <p>I most recently led the product design team at VICE. It was a lot of&nbsp;fun.</p>\r\n                            <div>\r\n                                <Button to=\"/info\">More about me</Button>\r\n                            </div>\r\n                        </Styled.Bio>\r\n                    </Fade>\r\n                </div>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { motion } from \"framer-motion\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const ImageWrapper = styled(motion.div)`\r\n    background-color: ${props => props.theme.background.normal};\r\n    position: relative;\r\n    z-index: 2;\r\n\r\n    > div {\r\n        height: calc(100vw * .56);\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n\r\n        > div {\r\n            height: 100vh;\r\n            left: 50%;\r\n            min-height: 1280px;\r\n            position: absolute;\r\n            transform: translateX(-50%);\r\n        }\r\n\r\n    }\r\n\r\n`\r\n\r\nexport const ImageCell = styled.div`\r\n    grid-row: 1;\r\n    position: relative;\r\n`\r\n\r\nexport const ContentCell = styled.div`\r\n    grid-row: 1;\r\n    margin-top: var(--su);\r\n\r\n    @media (min-width: 800px) {\r\n        margin-top: 0;\r\n    }\r\n\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color: transparent;\r\n    margin-bottom: calc(var(--su) * -2);\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 0;\r\n    \r\n        &:nth-child(odd) {\r\n\r\n            ${ImageCell} {\r\n                grid-column: 2;\r\n                margin-left: calc(var(--su) * -1);\r\n            }\r\n\r\n            ${ImageWrapper} {\r\n\r\n                @media (min-width: 800px) {\r\n                    margin-right: auto;\r\n                }    \r\n\r\n            }\r\n\r\n            ${ContentCell} {\r\n                grid-column: 1;\r\n            }\r\n\r\n        }\r\n\r\n        &:nth-child(even) {\r\n\r\n            ${ImageCell} {\r\n                grid-column: 1;\r\n                margin-right: calc(var(--su) * -1);\r\n            }\r\n\r\n            ${ImageWrapper} {\r\n\r\n                @media (min-width: 800px) {\r\n                    margin-left: auto;\r\n                }    \r\n                \r\n            }\r\n\r\n            ${ContentCell} {\r\n                grid-column: 2;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n`\r\n","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Fade } from \"../Animations\"\r\nimport { useInView } from \"react-intersection-observer\"\r\nimport Card from \"../Card\"\r\nimport Container from \"../Container\"\r\nimport Grid from \"../Grid\"\r\nimport Image from \"../Image\"\r\n\r\nexport default (props) => {\r\n\r\n    // Intersection Observer\r\n\r\n    const [ref, inView] = useInView({\r\n        rootMargin: \"-160px 0px\",\r\n        triggerOnce: true,\r\n    })\r\n\r\n    // Animations\r\n\r\n    const imageVariant = {\r\n        initial: {\r\n            width: 0,\r\n        },\r\n        visible: {\r\n            width: inView ? \"auto\" : 0,\r\n            transition: {\r\n                duration: 0.75,\r\n                ease: [0.85, 0, 0.35, 1],\r\n                type: \"tween\"\r\n            },\r\n        },\r\n        exit: {\r\n            width: 0,\r\n            transition: {\r\n                duration: 0.75,\r\n                ease: [0.85, 0, 0.35, 1],\r\n                type: \"tween\"\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Styled.Wrapper>\r\n            <Container hasVerticalLine={false}>\r\n                <Grid alignItems=\"center\">\r\n                    <Styled.ContentCell>\r\n                        <Fade>\r\n                            <Card\r\n                                meta={{\r\n                                    primary: props.dateStart === props.dateEnd ? props.dateEnd : props.dateStart + \" - \" + props.dateEnd\r\n                                }}\r\n                                title={props.title}\r\n                                dek={props.description}\r\n                                cta={props.cta}\r\n                                slug={props.slug}\r\n                            />\r\n                        </Fade>\r\n                    </Styled.ContentCell>\r\n                    <Styled.ImageCell>\r\n                        <Styled.ImageWrapper\r\n                            ref={ref}\r\n                            initial=\"initial\"\r\n                            animate=\"visible\"\r\n                            exit=\"exit\"\r\n                            variants={imageVariant}\r\n                        >\r\n                            <Image src={props.image} alt={props.imageAlt} objectPosition={props.imagePosition} />\r\n                        </Styled.ImageWrapper>\r\n                    </Styled.ImageCell>\r\n                </Grid>\r\n            </Container>\r\n        </Styled.Wrapper>\r\n    )\r\n}","import React, { useContext, useEffect } from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { NavContext } from \"../../contexts/NavContext\"\r\nimport { SlideUp } from \"../Animations\"\r\nimport { useMediaQuery } from '@react-hook/media-query'\r\nimport Container from \"../Container\"\r\nimport Grid from \"../Grid\"\r\nimport Linebreaker from \"../Linebreaker\"\r\nimport Card from \"../Card\"\r\nimport SEO from \"../SEO\"\r\nimport SiteHero from \"../SiteHero\"\r\nimport WorkCard from \"../WorkCard\"\r\n\r\nexport default () => {\r\n\r\n    // Setting nav state\r\n\r\n    const { updatePageNavScheme, updateVisibleNavScheme } = useContext(NavContext)\r\n\r\n    useEffect(() => {\r\n        updatePageNavScheme(false, false)\r\n        updateVisibleNavScheme(false, false)\r\n    }, [updatePageNavScheme, updateVisibleNavScheme])\r\n\r\n    // Media query hook used to adjust copy\r\n\r\n    const isDesktop = useMediaQuery(\"(min-width: 800px)\")\r\n\r\n    // Data\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        work: allMdx(\r\n            sort: { fields: [frontmatter___key], order: ASC },\r\n            filter: { fileAbsolutePath: {regex: \"/(work)/\"  }}\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        dek\r\n                        dateStart\r\n                        dateEnd\r\n                        cardImage\r\n                        cardImagePosition\r\n                        key\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        blog: allMdx(\r\n            sort: { fields: [frontmatter___date], order: DESC },\r\n            filter: { fileAbsolutePath: {regex: \"/(blog)/\"} }\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"YYYY\")\r\n                        category\r\n                        dek\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        photography: allMdx(\r\n            sort: { fields: [frontmatter___date], order: DESC },\r\n            filter: { fileAbsolutePath: {regex: \"/(photography)/\"  }}\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"YYYY\")\r\n                        dek\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`)\r\n\r\n    return (\r\n        <>\r\n            <SEO\r\n                title=\"Home\"\r\n            />\r\n            <SiteHero />\r\n            {data.work.edges.map(({ node }) => (\r\n                <WorkCard\r\n                    key={node.id}\r\n                    title={node.frontmatter.title}\r\n                    image={node.frontmatter.cardImage}\r\n                    imageAlt={`${node.frontmatter.title} image`}\r\n                    imagePosition={node.frontmatter.cardImagePosition}\r\n                    dateStart={node.frontmatter.dateStart}\r\n                    dateEnd={node.frontmatter.dateEnd}\r\n                    description={node.frontmatter.dek}\r\n                    slug={node.fields.slug}\r\n                    cta=\"Read\"\r\n                />\r\n            ))}\r\n            <Container hasVerticalLine={true}>\r\n                <Linebreaker>\r\n                    <h1>\r\n                        <SlideUp>Writing.</SlideUp>\r\n                    </h1>\r\n                </Linebreaker>\r\n                <Grid>\r\n                    <div>\r\n                        {data.blog.edges.map(({ node }) => (\r\n                            <Card\r\n                                key={node.id}\r\n                                meta={{\r\n                                    primary: node.frontmatter.date,\r\n                                    secondary: node.frontmatter.category\r\n                                }}\r\n                                slug={node.fields.slug}\r\n                                title={node.frontmatter.title}\r\n                                dek={node.frontmatter.dek}\r\n                                category={node.frontmatter.category}\r\n                                cta=\"Read\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </Grid>\r\n                <Linebreaker>\r\n                    <h1>\r\n                        <SlideUp>\r\n                            {isDesktop ? \"Photography.\" : \"Photos.\"}\r\n                        </SlideUp>\r\n                    </h1>\r\n                </Linebreaker>\r\n                <Grid>\r\n                    <div>\r\n                        {data.photography.edges.map(({ node }) => (\r\n                            <Card\r\n                                key={node.id}\r\n                                meta={{\r\n                                    primary: node.frontmatter.date\r\n                                }}\r\n                                slug={node.fields.slug}\r\n                                title={node.frontmatter.title}\r\n                                dek={node.frontmatter.dek}\r\n                                cta=\"Look\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Index from \"../components/Index\"\r\n\r\nexport default () => {\r\n    return (\r\n        <Index />\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    margin: calc(var(--su) / 2) 0;\r\n    padding: calc(var(--su) / 2) 0;\r\n\r\n    &:first-child {\r\n        margin-top: 0;\r\n    }\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        background-color: inherit; // Requires parent with a background color\r\n        color: inherit;\r\n        position: relative;\r\n        z-index: 1;\r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Wrapper>\r\n            {props.children}\r\n        </Styled.Wrapper>\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    color: ${props => props.theme.text.normal };\r\n    margin-bottom: calc(var(--su) * 2);\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: var(--su);\r\n    }\r\n\r\n`\r\n\r\nexport const Meta = styled.h6`\r\n    margin-bottom: 16px;\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 24px;\r\n    }\r\n\r\n`\r\n\r\nexport const Title = styled.h3`\r\n    margin-bottom: 8px;\r\n\r\n    @media (min-width: 800px) {\r\n        margin-bottom: 16px;\r\n    }\r\n\r\n    a,\r\n    a:visited {\r\n        color: ${props => props.theme.text.normal};\r\n        text-decoration: none;\r\n\r\n        &:hover {\r\n            color: ${props => props.theme.link.normal };\r\n        }\r\n\r\n    }\r\n\r\n`\r\n\r\nexport const Description = styled.p`\r\n    margin-bottom: 16px;\r\n\r\n    @media(min-width: 800px) {\r\n        margin-bottom: 24px;\r\n    }\r\n    \r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Fade } from \"../Animations\"\r\nimport { Link } from \"gatsby\"\r\nimport Button from \"../Button\"\r\nimport InlineDivider from \"../InlineDivider\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Wrapper key={props.id}>\r\n            <Fade>\r\n                {props.meta &&\r\n                    <Styled.Meta>\r\n                        {props.meta.primary}\r\n                        {props.meta.secondary &&\r\n                            <span>\r\n                                <InlineDivider />{props.meta.secondary}\r\n                            </span>\r\n                        }\r\n                    </Styled.Meta>\r\n                }\r\n                <Styled.Title>\r\n                    <Link to={props.slug}>{props.title}</Link>\r\n                </Styled.Title>\r\n                <Styled.Description>{props.dek}</Styled.Description>\r\n                <Button to={props.slug}>{props.cta}</Button>\r\n            </Fade>\r\n        </Styled.Wrapper>\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Divider = styled.span`\r\n    border-bottom: 1px solid ${props => props.invertColor ? props.theme.line.inverted : props.theme.line.normal };\r\n    display: inline-block;\r\n    margin: 0 8px;\r\n    position: relative;\r\n    top: -0.3em;\r\n    width: 16px;\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Divider invertColor={props.invertColor} />\r\n    )\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    a {\r\n        border: var(--line-width) solid ${props => props.theme.text.normal};\r\n        box-shadow: 4px 4px 0 ${props => props.theme.text.normal};\r\n        color: ${props => props.theme.text.normal};\r\n        display: inline-block;\r\n        line-height: var(--line-height-tight);\r\n        padding: 12px 32px;\r\n        position: relative;\r\n        text-decoration: none;\r\n        transition: 0.1s linear box-shadow;\r\n\r\n        &:hover { \r\n            border-color: ${props => props.theme.link.normal};\r\n            box-shadow: 8px 8px 0 ${props => props.theme.link.normal};\r\n            color: ${props => props.theme.link.normal};\r\n        }\r\n    \r\n    }\r\n\r\n`","import React from \"react\"\r\nimport * as Styled from \"./styled\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Styled.Wrapper>\r\n            <h5>\r\n                <Link to={props.to}>\r\n                    {props.children}\r\n                </Link>\r\n            </h5>\r\n        </Styled.Wrapper>\r\n    )\r\n}"],"sourceRoot":""}